kind: Deployment
apiVersion: apps/v1
metadata:
  name: db2mc
  labels:
    app: db2mc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db2mc
  template:
    metadata:
      labels:
        app: db2mc
    spec:
      volumes:
        - name: db2mc
          persistentVolumeClaim:
            claimName: db2mc
        - name: password
          secret:
            secretName: dmc-password
            defaultMode: 256
      containers:
        - resources: {}
          readinessProbe:
            tcpSocket:
              port: 8443
            initialDelaySeconds: 45
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 5
          terminationMessagePath: /dev/termination-log
          name: db2mc
          livenessProbe:
            tcpSocket:
              port: 8443
            initialDelaySeconds: 45
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 10
          env:
            - name: ADMIN_NAME
              value: cpadmin
            - name: LICENSE
              value: accept
            - name: POD_NAME
              value: db2mc
          ports:
            - containerPort: 8443
              protocol: TCP
          imagePullPolicy: IfNotPresent
          startupProbe:
            exec:
              command:
                - sh
                - '-c'
                - >-
                  cat /opt/ibm-datasrvrmgr/logs/messages.log | grep "The dsweb
                  server is ready to run a smarter planet"
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 30
          volumeMounts:
            - name: db2mc
              mountPath: /mnt
            - name: password
              readOnly: true
              mountPath: /opt/ibm-datasrvrmgr/secrets/SUPER_PASSWORD
              subPath: password
          terminationMessagePolicy: File
          image: 'ibmcom/db2console:3.1.7'
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
---
kind: Service
apiVersion: v1
metadata:
  name: db2mc
spec:
  ports:
    - protocol: TCP
      port: 8443
      targetPort: 8443
  type: ClusterIP
  selector:
    app: db2mc